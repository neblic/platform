receivers:
  otlp/receiver:
    protocols:
      grpc:
        # Required: Data plane endpoint.
        endpoint: "${env:NEBLIC_DATA_PLANE_RECEIVER_ENDPOINT}"

        # Uncomment to enable TLS
        # tls:
        #   cert_file: /etc/otelcol/ca/otelcol.crt
        #   key_file: /etc/otelcol/ca/otelcol.key

        # To use Bearer authentication TLS needs to be enabled
        # auth:
        #   authenticator: bearerauth
processors:
  batch:
    send_batch_size: "${env:PROCESSOR_BATCH_SEND_BATCH_SIZE}"
    timeout: "${env:PROCESSOR_BATCH_TIMEOUT}"
    send_batch_max_size: "${env:PROCESSOR_BATCH_SEND_BATCH_MAX_SIZE}"
    metadata_keys: "${env:PROCESSOR_BATCH_METADATA_KEYS}"
    metadata_cardinality_limit: "${env:PROCESSOR_BATCH_METADATA_CARDINALITY_LIMIT}"
  # Required: Neblic extension configuration
  neblic:
    # Collector id, if not provided, a random uid is used
    # uid: <unique collector id>

    # Required: Control Plane endpoint
    endpoint: "${env:NEBLIC_CONTROL_PLANE_ENDPOINT}"

    # Where will be configurations persisted on disk. If unset, configurations will be only kept in memory and lost when the collector restarts
    storage_path: "${env:NEBLIC_STORAGE_PATH}"

    # Uncomment to enable TLS
    # tls:
    #   cert_file: /etc/otelcol/ca/otelcol.crt
    #   key_file: /etc/otelcol/ca/otelcol.key

    # To use Bearer authentication TLS needs to be enabled
    # auth:
    #  type: bearer
    #  bearer:
    #     token: some_secret_token

  # resource:
    # Required if using Loki as a store
    # Attributes processor: https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/processor/attributesprocessor
    # can create a new attribute that Loki will pick as a label using the sampler_name label
    # attributes:
    # - action: insert
    #   key: loki.resource.labels
    #   value: sampler_name

exporters:
  # Uncomment to enable simple summary messages with the amount of `Data Samples` exported
  # logging:

  # Grafana Loki exporter: https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/exporter/lokiexporter
  # loki:
  #  # Where Loki will receive `Data Samples` (Loki push endpoint: https://grafana.com/docs/loki/latest/api/#push-log-entries-to-loki)
  #  endpoint: "${env:LOKI_LOG_PUSH_ENDPOINT}"

  otlp/exporter:
    endpoint: "${env:NEBLIC_DATA_PLANE_EXPORTER_ENDPOINT}"
    tls:
      insecure: false
    auth:
      authenticator: bearertokenauth

extensions:
  health_check:
    endpoint: 0.0.0.0:5000
  # Bearer authentication configuration. If the OTLP receiver has Bearer authentication enabled, it needs to be configured
  bearertokenauth:
    scheme: Bearer
    token: "${env:NEBLIC_DATA_PLANE_EXPORTER_BEARER_TOKEN}"

service:
  # Collector configuration
  telemetry:
    logs:
      level: info
      encoding: json

  # Required: A pipeline consisting of at least a receiver and an exporter must be configured
  pipelines:
    logs:
      receivers:
      - otlp/receiver
      processors:
      - batch
      - neblic
      # - resource
      exporters:
      # - logging
      # - loki
      - otlp/exporter
  extensions:
    - health_check
    - bearertokenauth
