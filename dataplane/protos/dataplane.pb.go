// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.21.6
// source: protos/dataplane.proto

package protos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type IntNumSt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count int64 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *IntNumSt) Reset() {
	*x = IntNumSt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_dataplane_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IntNumSt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntNumSt) ProtoMessage() {}

func (x *IntNumSt) ProtoReflect() protoreflect.Message {
	mi := &file_protos_dataplane_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntNumSt.ProtoReflect.Descriptor instead.
func (*IntNumSt) Descriptor() ([]byte, []int) {
	return file_protos_dataplane_proto_rawDescGZIP(), []int{0}
}

func (x *IntNumSt) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type UIntNumSt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count int64 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *UIntNumSt) Reset() {
	*x = UIntNumSt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_dataplane_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UIntNumSt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UIntNumSt) ProtoMessage() {}

func (x *UIntNumSt) ProtoReflect() protoreflect.Message {
	mi := &file_protos_dataplane_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UIntNumSt.ProtoReflect.Descriptor instead.
func (*UIntNumSt) Descriptor() ([]byte, []int) {
	return file_protos_dataplane_proto_rawDescGZIP(), []int{1}
}

func (x *UIntNumSt) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type FloatNumSt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count int64 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *FloatNumSt) Reset() {
	*x = FloatNumSt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_dataplane_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FloatNumSt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FloatNumSt) ProtoMessage() {}

func (x *FloatNumSt) ProtoReflect() protoreflect.Message {
	mi := &file_protos_dataplane_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FloatNumSt.ProtoReflect.Descriptor instead.
func (*FloatNumSt) Descriptor() ([]byte, []int) {
	return file_protos_dataplane_proto_rawDescGZIP(), []int{2}
}

func (x *FloatNumSt) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type NumberSt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// if more than one is set, multiple types detected
	IntegerNum  *IntNumSt   `protobuf:"bytes,1,opt,name=integer_num,json=integerNum,proto3" json:"integer_num,omitempty"`
	UintegerNum *UIntNumSt  `protobuf:"bytes,2,opt,name=uinteger_num,json=uintegerNum,proto3" json:"uinteger_num,omitempty"`
	FloatNum    *FloatNumSt `protobuf:"bytes,3,opt,name=float_num,json=floatNum,proto3" json:"float_num,omitempty"`
}

func (x *NumberSt) Reset() {
	*x = NumberSt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_dataplane_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NumberSt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NumberSt) ProtoMessage() {}

func (x *NumberSt) ProtoReflect() protoreflect.Message {
	mi := &file_protos_dataplane_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NumberSt.ProtoReflect.Descriptor instead.
func (*NumberSt) Descriptor() ([]byte, []int) {
	return file_protos_dataplane_proto_rawDescGZIP(), []int{3}
}

func (x *NumberSt) GetIntegerNum() *IntNumSt {
	if x != nil {
		return x.IntegerNum
	}
	return nil
}

func (x *NumberSt) GetUintegerNum() *UIntNumSt {
	if x != nil {
		return x.UintegerNum
	}
	return nil
}

func (x *NumberSt) GetFloatNum() *FloatNumSt {
	if x != nil {
		return x.FloatNum
	}
	return nil
}

type StringSt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count int64 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *StringSt) Reset() {
	*x = StringSt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_dataplane_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StringSt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringSt) ProtoMessage() {}

func (x *StringSt) ProtoReflect() protoreflect.Message {
	mi := &file_protos_dataplane_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StringSt.ProtoReflect.Descriptor instead.
func (*StringSt) Descriptor() ([]byte, []int) {
	return file_protos_dataplane_proto_rawDescGZIP(), []int{4}
}

func (x *StringSt) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type BooleanSt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count int64 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *BooleanSt) Reset() {
	*x = BooleanSt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_dataplane_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BooleanSt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BooleanSt) ProtoMessage() {}

func (x *BooleanSt) ProtoReflect() protoreflect.Message {
	mi := &file_protos_dataplane_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BooleanSt.ProtoReflect.Descriptor instead.
func (*BooleanSt) Descriptor() ([]byte, []int) {
	return file_protos_dataplane_proto_rawDescGZIP(), []int{5}
}

func (x *BooleanSt) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type ValueSt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// if more than one is set, multiple types detected
	Number  *NumberSt  `protobuf:"bytes,1,opt,name=number,proto3" json:"number,omitempty"`
	String_ *StringSt  `protobuf:"bytes,2,opt,name=string,proto3" json:"string,omitempty"`
	Boolean *BooleanSt `protobuf:"bytes,3,opt,name=boolean,proto3" json:"boolean,omitempty"`
	Array   *ArraySt   `protobuf:"bytes,4,opt,name=array,proto3" json:"array,omitempty"`
	Obj     *ObjSt     `protobuf:"bytes,5,opt,name=obj,proto3" json:"obj,omitempty"`
}

func (x *ValueSt) Reset() {
	*x = ValueSt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_dataplane_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValueSt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValueSt) ProtoMessage() {}

func (x *ValueSt) ProtoReflect() protoreflect.Message {
	mi := &file_protos_dataplane_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValueSt.ProtoReflect.Descriptor instead.
func (*ValueSt) Descriptor() ([]byte, []int) {
	return file_protos_dataplane_proto_rawDescGZIP(), []int{6}
}

func (x *ValueSt) GetNumber() *NumberSt {
	if x != nil {
		return x.Number
	}
	return nil
}

func (x *ValueSt) GetString_() *StringSt {
	if x != nil {
		return x.String_
	}
	return nil
}

func (x *ValueSt) GetBoolean() *BooleanSt {
	if x != nil {
		return x.Boolean
	}
	return nil
}

func (x *ValueSt) GetArray() *ArraySt {
	if x != nil {
		return x.Array
	}
	return nil
}

func (x *ValueSt) GetObj() *ObjSt {
	if x != nil {
		return x.Obj
	}
	return nil
}

type ObjSt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count  int64               `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	Fields map[string]*ValueSt `protobuf:"bytes,2,rep,name=fields,proto3" json:"fields,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ObjSt) Reset() {
	*x = ObjSt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_dataplane_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjSt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjSt) ProtoMessage() {}

func (x *ObjSt) ProtoReflect() protoreflect.Message {
	mi := &file_protos_dataplane_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjSt.ProtoReflect.Descriptor instead.
func (*ObjSt) Descriptor() ([]byte, []int) {
	return file_protos_dataplane_proto_rawDescGZIP(), []int{7}
}

func (x *ObjSt) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ObjSt) GetFields() map[string]*ValueSt {
	if x != nil {
		return x.Fields
	}
	return nil
}

type ArraySt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count     int64    `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	Values    *ValueSt `protobuf:"bytes,2,opt,name=values,proto3" json:"values,omitempty"`
	MinLength float64  `protobuf:"fixed64,3,opt,name=min_length,json=minLength,proto3" json:"min_length,omitempty"`
	MaxLength float64  `protobuf:"fixed64,4,opt,name=max_length,json=maxLength,proto3" json:"max_length,omitempty"`
	// to be able to calculate the average when aggregating digests
	SumLength float64 `protobuf:"fixed64,5,opt,name=sum_length,json=sumLength,proto3" json:"sum_length,omitempty"`
}

func (x *ArraySt) Reset() {
	*x = ArraySt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_dataplane_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArraySt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArraySt) ProtoMessage() {}

func (x *ArraySt) ProtoReflect() protoreflect.Message {
	mi := &file_protos_dataplane_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArraySt.ProtoReflect.Descriptor instead.
func (*ArraySt) Descriptor() ([]byte, []int) {
	return file_protos_dataplane_proto_rawDescGZIP(), []int{8}
}

func (x *ArraySt) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ArraySt) GetValues() *ValueSt {
	if x != nil {
		return x.Values
	}
	return nil
}

func (x *ArraySt) GetMinLength() float64 {
	if x != nil {
		return x.MinLength
	}
	return 0
}

func (x *ArraySt) GetMaxLength() float64 {
	if x != nil {
		return x.MaxLength
	}
	return 0
}

func (x *ArraySt) GetSumLength() float64 {
	if x != nil {
		return x.SumLength
	}
	return 0
}

type StructureDigest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Obj *ObjSt `protobuf:"bytes,1,opt,name=obj,proto3" json:"obj,omitempty"`
}

func (x *StructureDigest) Reset() {
	*x = StructureDigest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_dataplane_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StructureDigest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StructureDigest) ProtoMessage() {}

func (x *StructureDigest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_dataplane_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StructureDigest.ProtoReflect.Descriptor instead.
func (*StructureDigest) Descriptor() ([]byte, []int) {
	return file_protos_dataplane_proto_rawDescGZIP(), []int{9}
}

func (x *StructureDigest) GetObj() *ObjSt {
	if x != nil {
		return x.Obj
	}
	return nil
}

type MinStat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value float64 `protobuf:"fixed64,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *MinStat) Reset() {
	*x = MinStat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_dataplane_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MinStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MinStat) ProtoMessage() {}

func (x *MinStat) ProtoReflect() protoreflect.Message {
	mi := &file_protos_dataplane_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MinStat.ProtoReflect.Descriptor instead.
func (*MinStat) Descriptor() ([]byte, []int) {
	return file_protos_dataplane_proto_rawDescGZIP(), []int{10}
}

func (x *MinStat) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type AvgStat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sum   float64 `protobuf:"fixed64,1,opt,name=sum,proto3" json:"sum,omitempty"`
	Count uint64  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *AvgStat) Reset() {
	*x = AvgStat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_dataplane_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvgStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvgStat) ProtoMessage() {}

func (x *AvgStat) ProtoReflect() protoreflect.Message {
	mi := &file_protos_dataplane_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvgStat.ProtoReflect.Descriptor instead.
func (*AvgStat) Descriptor() ([]byte, []int) {
	return file_protos_dataplane_proto_rawDescGZIP(), []int{11}
}

func (x *AvgStat) GetSum() float64 {
	if x != nil {
		return x.Sum
	}
	return 0
}

func (x *AvgStat) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type MaxStat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value float64 `protobuf:"fixed64,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *MaxStat) Reset() {
	*x = MaxStat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_dataplane_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxStat) ProtoMessage() {}

func (x *MaxStat) ProtoReflect() protoreflect.Message {
	mi := &file_protos_dataplane_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxStat.ProtoReflect.Descriptor instead.
func (*MaxStat) Descriptor() ([]byte, []int) {
	return file_protos_dataplane_proto_rawDescGZIP(), []int{12}
}

func (x *MaxStat) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type NumberStat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Min *MinStat `protobuf:"bytes,1,opt,name=min,proto3" json:"min,omitempty"`
	Avg *AvgStat `protobuf:"bytes,2,opt,name=avg,proto3" json:"avg,omitempty"`
	Max *MaxStat `protobuf:"bytes,3,opt,name=max,proto3" json:"max,omitempty"`
}

func (x *NumberStat) Reset() {
	*x = NumberStat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_dataplane_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NumberStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NumberStat) ProtoMessage() {}

func (x *NumberStat) ProtoReflect() protoreflect.Message {
	mi := &file_protos_dataplane_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NumberStat.ProtoReflect.Descriptor instead.
func (*NumberStat) Descriptor() ([]byte, []int) {
	return file_protos_dataplane_proto_rawDescGZIP(), []int{13}
}

func (x *NumberStat) GetMin() *MinStat {
	if x != nil {
		return x.Min
	}
	return nil
}

func (x *NumberStat) GetAvg() *AvgStat {
	if x != nil {
		return x.Avg
	}
	return nil
}

func (x *NumberStat) GetMax() *MaxStat {
	if x != nil {
		return x.Max
	}
	return nil
}

type NumberValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalCount   uint64   `protobuf:"varint,1,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	DefaultCount uint64   `protobuf:"varint,2,opt,name=default_count,json=defaultCount,proto3" json:"default_count,omitempty"`
	NullCount    uint64   `protobuf:"varint,3,opt,name=null_count,json=nullCount,proto3" json:"null_count,omitempty"`
	Min          *MinStat `protobuf:"bytes,4,opt,name=min,proto3" json:"min,omitempty"`
	Avg          *AvgStat `protobuf:"bytes,5,opt,name=avg,proto3" json:"avg,omitempty"`
	Max          *MaxStat `protobuf:"bytes,6,opt,name=max,proto3" json:"max,omitempty"`
}

func (x *NumberValue) Reset() {
	*x = NumberValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_dataplane_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NumberValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NumberValue) ProtoMessage() {}

func (x *NumberValue) ProtoReflect() protoreflect.Message {
	mi := &file_protos_dataplane_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NumberValue.ProtoReflect.Descriptor instead.
func (*NumberValue) Descriptor() ([]byte, []int) {
	return file_protos_dataplane_proto_rawDescGZIP(), []int{14}
}

func (x *NumberValue) GetTotalCount() uint64 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *NumberValue) GetDefaultCount() uint64 {
	if x != nil {
		return x.DefaultCount
	}
	return 0
}

func (x *NumberValue) GetNullCount() uint64 {
	if x != nil {
		return x.NullCount
	}
	return 0
}

func (x *NumberValue) GetMin() *MinStat {
	if x != nil {
		return x.Min
	}
	return nil
}

func (x *NumberValue) GetAvg() *AvgStat {
	if x != nil {
		return x.Avg
	}
	return nil
}

func (x *NumberValue) GetMax() *MaxStat {
	if x != nil {
		return x.Max
	}
	return nil
}

type StringValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalCount   uint64      `protobuf:"varint,1,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	DefaultCount uint64      `protobuf:"varint,2,opt,name=default_count,json=defaultCount,proto3" json:"default_count,omitempty"`
	NullCount    uint64      `protobuf:"varint,3,opt,name=null_count,json=nullCount,proto3" json:"null_count,omitempty"`
	Length       *NumberStat `protobuf:"bytes,6,opt,name=length,proto3" json:"length,omitempty"`
}

func (x *StringValue) Reset() {
	*x = StringValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_dataplane_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StringValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringValue) ProtoMessage() {}

func (x *StringValue) ProtoReflect() protoreflect.Message {
	mi := &file_protos_dataplane_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StringValue.ProtoReflect.Descriptor instead.
func (*StringValue) Descriptor() ([]byte, []int) {
	return file_protos_dataplane_proto_rawDescGZIP(), []int{15}
}

func (x *StringValue) GetTotalCount() uint64 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *StringValue) GetDefaultCount() uint64 {
	if x != nil {
		return x.DefaultCount
	}
	return 0
}

func (x *StringValue) GetNullCount() uint64 {
	if x != nil {
		return x.NullCount
	}
	return 0
}

func (x *StringValue) GetLength() *NumberStat {
	if x != nil {
		return x.Length
	}
	return nil
}

type BooleanValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalCount   uint64 `protobuf:"varint,1,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	DefaultCount uint64 `protobuf:"varint,2,opt,name=default_count,json=defaultCount,proto3" json:"default_count,omitempty"`
	NullCount    uint64 `protobuf:"varint,3,opt,name=null_count,json=nullCount,proto3" json:"null_count,omitempty"`
	TotalFalse   uint64 `protobuf:"varint,4,opt,name=total_false,json=totalFalse,proto3" json:"total_false,omitempty"`
	TotalTrue    uint64 `protobuf:"varint,5,opt,name=total_true,json=totalTrue,proto3" json:"total_true,omitempty"`
}

func (x *BooleanValue) Reset() {
	*x = BooleanValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_dataplane_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BooleanValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BooleanValue) ProtoMessage() {}

func (x *BooleanValue) ProtoReflect() protoreflect.Message {
	mi := &file_protos_dataplane_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BooleanValue.ProtoReflect.Descriptor instead.
func (*BooleanValue) Descriptor() ([]byte, []int) {
	return file_protos_dataplane_proto_rawDescGZIP(), []int{16}
}

func (x *BooleanValue) GetTotalCount() uint64 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *BooleanValue) GetDefaultCount() uint64 {
	if x != nil {
		return x.DefaultCount
	}
	return 0
}

func (x *BooleanValue) GetNullCount() uint64 {
	if x != nil {
		return x.NullCount
	}
	return 0
}

func (x *BooleanValue) GetTotalFalse() uint64 {
	if x != nil {
		return x.TotalFalse
	}
	return 0
}

func (x *BooleanValue) GetTotalTrue() uint64 {
	if x != nil {
		return x.TotalTrue
	}
	return 0
}

type ArrayValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalCount   uint64      `protobuf:"varint,1,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	DefaultCount uint64      `protobuf:"varint,2,opt,name=default_count,json=defaultCount,proto3" json:"default_count,omitempty"`
	NullCount    uint64      `protobuf:"varint,3,opt,name=null_count,json=nullCount,proto3" json:"null_count,omitempty"`
	Values       *ValueValue `protobuf:"bytes,4,opt,name=values,proto3" json:"values,omitempty"`
}

func (x *ArrayValue) Reset() {
	*x = ArrayValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_dataplane_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArrayValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArrayValue) ProtoMessage() {}

func (x *ArrayValue) ProtoReflect() protoreflect.Message {
	mi := &file_protos_dataplane_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArrayValue.ProtoReflect.Descriptor instead.
func (*ArrayValue) Descriptor() ([]byte, []int) {
	return file_protos_dataplane_proto_rawDescGZIP(), []int{17}
}

func (x *ArrayValue) GetTotalCount() uint64 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *ArrayValue) GetDefaultCount() uint64 {
	if x != nil {
		return x.DefaultCount
	}
	return 0
}

func (x *ArrayValue) GetNullCount() uint64 {
	if x != nil {
		return x.NullCount
	}
	return 0
}

func (x *ArrayValue) GetValues() *ValueValue {
	if x != nil {
		return x.Values
	}
	return nil
}

type ObjValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalCount   uint64                 `protobuf:"varint,1,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	DefaultCount uint64                 `protobuf:"varint,2,opt,name=default_count,json=defaultCount,proto3" json:"default_count,omitempty"`
	NullCount    uint64                 `protobuf:"varint,3,opt,name=null_count,json=nullCount,proto3" json:"null_count,omitempty"`
	Fields       map[string]*ValueValue `protobuf:"bytes,4,rep,name=fields,proto3" json:"fields,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ObjValue) Reset() {
	*x = ObjValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_dataplane_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjValue) ProtoMessage() {}

func (x *ObjValue) ProtoReflect() protoreflect.Message {
	mi := &file_protos_dataplane_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjValue.ProtoReflect.Descriptor instead.
func (*ObjValue) Descriptor() ([]byte, []int) {
	return file_protos_dataplane_proto_rawDescGZIP(), []int{18}
}

func (x *ObjValue) GetTotalCount() uint64 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *ObjValue) GetDefaultCount() uint64 {
	if x != nil {
		return x.DefaultCount
	}
	return 0
}

func (x *ObjValue) GetNullCount() uint64 {
	if x != nil {
		return x.NullCount
	}
	return 0
}

func (x *ObjValue) GetFields() map[string]*ValueValue {
	if x != nil {
		return x.Fields
	}
	return nil
}

type ValueValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalCount uint64 `protobuf:"varint,1,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	NullCount  uint64 `protobuf:"varint,2,opt,name=null_count,json=nullCount,proto3" json:"null_count,omitempty"`
	// if more than one is set, multiple types detected
	Number  *NumberValue  `protobuf:"bytes,3,opt,name=number,proto3" json:"number,omitempty"`
	String_ *StringValue  `protobuf:"bytes,4,opt,name=string,proto3" json:"string,omitempty"`
	Boolean *BooleanValue `protobuf:"bytes,5,opt,name=boolean,proto3" json:"boolean,omitempty"`
	Array   *ArrayValue   `protobuf:"bytes,6,opt,name=array,proto3" json:"array,omitempty"`
	Obj     *ObjValue     `protobuf:"bytes,7,opt,name=obj,proto3" json:"obj,omitempty"`
}

func (x *ValueValue) Reset() {
	*x = ValueValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_dataplane_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValueValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValueValue) ProtoMessage() {}

func (x *ValueValue) ProtoReflect() protoreflect.Message {
	mi := &file_protos_dataplane_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValueValue.ProtoReflect.Descriptor instead.
func (*ValueValue) Descriptor() ([]byte, []int) {
	return file_protos_dataplane_proto_rawDescGZIP(), []int{19}
}

func (x *ValueValue) GetTotalCount() uint64 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *ValueValue) GetNullCount() uint64 {
	if x != nil {
		return x.NullCount
	}
	return 0
}

func (x *ValueValue) GetNumber() *NumberValue {
	if x != nil {
		return x.Number
	}
	return nil
}

func (x *ValueValue) GetString_() *StringValue {
	if x != nil {
		return x.String_
	}
	return nil
}

func (x *ValueValue) GetBoolean() *BooleanValue {
	if x != nil {
		return x.Boolean
	}
	return nil
}

func (x *ValueValue) GetArray() *ArrayValue {
	if x != nil {
		return x.Array
	}
	return nil
}

func (x *ValueValue) GetObj() *ObjValue {
	if x != nil {
		return x.Obj
	}
	return nil
}

// used for testing
type TestSample struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Double     float64         `protobuf:"fixed64,1,opt,name=double,proto3" json:"double,omitempty"`
	Float      float32         `protobuf:"fixed32,2,opt,name=float,proto3" json:"float,omitempty"`
	Int32      int32           `protobuf:"varint,3,opt,name=int32,proto3" json:"int32,omitempty"`
	Int64      int64           `protobuf:"varint,4,opt,name=int64,proto3" json:"int64,omitempty"`
	Uint32     uint32          `protobuf:"varint,5,opt,name=uint32,proto3" json:"uint32,omitempty"`
	Uint64     uint64          `protobuf:"varint,6,opt,name=uint64,proto3" json:"uint64,omitempty"`
	Sint32     int32           `protobuf:"zigzag32,7,opt,name=sint32,proto3" json:"sint32,omitempty"`
	Sint64     int64           `protobuf:"zigzag64,8,opt,name=sint64,proto3" json:"sint64,omitempty"`
	Fixed32    uint32          `protobuf:"fixed32,9,opt,name=fixed32,proto3" json:"fixed32,omitempty"`
	Fixed64    uint64          `protobuf:"fixed64,10,opt,name=fixed64,proto3" json:"fixed64,omitempty"`
	Sfixed32   int32           `protobuf:"fixed32,11,opt,name=sfixed32,proto3" json:"sfixed32,omitempty"`
	Sfixed64   int64           `protobuf:"fixed64,12,opt,name=sfixed64,proto3" json:"sfixed64,omitempty"`
	Bool       bool            `protobuf:"varint,13,opt,name=bool,proto3" json:"bool,omitempty"`
	String_    string          `protobuf:"bytes,14,opt,name=string,proto3" json:"string,omitempty"`
	Bytes      []byte          `protobuf:"bytes,15,opt,name=bytes,proto3" json:"bytes,omitempty"`
	Array      []int32         `protobuf:"varint,16,rep,packed,name=array,proto3" json:"array,omitempty"`
	Map        map[int32]int32 `protobuf:"bytes,17,rep,name=map,proto3" json:"map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	NestedMsg  *TestSample     `protobuf:"bytes,18,opt,name=nested_msg,json=nestedMsg,proto3" json:"nested_msg,omitempty"`
	NestedMsgs []*TestSample   `protobuf:"bytes,19,rep,name=nested_msgs,json=nestedMsgs,proto3" json:"nested_msgs,omitempty"`
}

func (x *TestSample) Reset() {
	*x = TestSample{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_dataplane_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestSample) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestSample) ProtoMessage() {}

func (x *TestSample) ProtoReflect() protoreflect.Message {
	mi := &file_protos_dataplane_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestSample.ProtoReflect.Descriptor instead.
func (*TestSample) Descriptor() ([]byte, []int) {
	return file_protos_dataplane_proto_rawDescGZIP(), []int{20}
}

func (x *TestSample) GetDouble() float64 {
	if x != nil {
		return x.Double
	}
	return 0
}

func (x *TestSample) GetFloat() float32 {
	if x != nil {
		return x.Float
	}
	return 0
}

func (x *TestSample) GetInt32() int32 {
	if x != nil {
		return x.Int32
	}
	return 0
}

func (x *TestSample) GetInt64() int64 {
	if x != nil {
		return x.Int64
	}
	return 0
}

func (x *TestSample) GetUint32() uint32 {
	if x != nil {
		return x.Uint32
	}
	return 0
}

func (x *TestSample) GetUint64() uint64 {
	if x != nil {
		return x.Uint64
	}
	return 0
}

func (x *TestSample) GetSint32() int32 {
	if x != nil {
		return x.Sint32
	}
	return 0
}

func (x *TestSample) GetSint64() int64 {
	if x != nil {
		return x.Sint64
	}
	return 0
}

func (x *TestSample) GetFixed32() uint32 {
	if x != nil {
		return x.Fixed32
	}
	return 0
}

func (x *TestSample) GetFixed64() uint64 {
	if x != nil {
		return x.Fixed64
	}
	return 0
}

func (x *TestSample) GetSfixed32() int32 {
	if x != nil {
		return x.Sfixed32
	}
	return 0
}

func (x *TestSample) GetSfixed64() int64 {
	if x != nil {
		return x.Sfixed64
	}
	return 0
}

func (x *TestSample) GetBool() bool {
	if x != nil {
		return x.Bool
	}
	return false
}

func (x *TestSample) GetString_() string {
	if x != nil {
		return x.String_
	}
	return ""
}

func (x *TestSample) GetBytes() []byte {
	if x != nil {
		return x.Bytes
	}
	return nil
}

func (x *TestSample) GetArray() []int32 {
	if x != nil {
		return x.Array
	}
	return nil
}

func (x *TestSample) GetMap() map[int32]int32 {
	if x != nil {
		return x.Map
	}
	return nil
}

func (x *TestSample) GetNestedMsg() *TestSample {
	if x != nil {
		return x.NestedMsg
	}
	return nil
}

func (x *TestSample) GetNestedMsgs() []*TestSample {
	if x != nil {
		return x.NestedMsgs
	}
	return nil
}

var File_protos_dataplane_proto protoreflect.FileDescriptor

var file_protos_dataplane_proto_rawDesc = []byte{
	0x0a, 0x16, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61,
	0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x20, 0x0a, 0x08, 0x49, 0x6e, 0x74, 0x4e,
	0x75, 0x6d, 0x53, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x21, 0x0a, 0x09, 0x55, 0x49,
	0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x53, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x22, 0x0a,
	0x0a, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x4e, 0x75, 0x6d, 0x53, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x22, 0x8f, 0x01, 0x0a, 0x08, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x74, 0x12, 0x2a,
	0x0a, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x49, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x53, 0x74, 0x52, 0x0a,
	0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x12, 0x2d, 0x0a, 0x0c, 0x75, 0x69,
	0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0a, 0x2e, 0x55, 0x49, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x53, 0x74, 0x52, 0x0b, 0x75, 0x69,
	0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x12, 0x28, 0x0a, 0x09, 0x66, 0x6c, 0x6f,
	0x61, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x46,
	0x6c, 0x6f, 0x61, 0x74, 0x4e, 0x75, 0x6d, 0x53, 0x74, 0x52, 0x08, 0x66, 0x6c, 0x6f, 0x61, 0x74,
	0x4e, 0x75, 0x6d, 0x22, 0x20, 0x0a, 0x08, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x21, 0x0a, 0x09, 0x42, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e,
	0x53, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xaf, 0x01, 0x0a, 0x07, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x53, 0x74, 0x12, 0x21, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x74, 0x52,
	0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x53, 0x74, 0x52, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x24, 0x0a, 0x07, 0x62, 0x6f,
	0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x42, 0x6f,
	0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x53, 0x74, 0x52, 0x07, 0x62, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e,
	0x12, 0x1e, 0x0a, 0x05, 0x61, 0x72, 0x72, 0x61, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x08, 0x2e, 0x41, 0x72, 0x72, 0x61, 0x79, 0x53, 0x74, 0x52, 0x05, 0x61, 0x72, 0x72, 0x61, 0x79,
	0x12, 0x18, 0x0a, 0x03, 0x6f, 0x62, 0x6a, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e,
	0x4f, 0x62, 0x6a, 0x53, 0x74, 0x52, 0x03, 0x6f, 0x62, 0x6a, 0x22, 0x8e, 0x01, 0x0a, 0x05, 0x4f,
	0x62, 0x6a, 0x53, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x06, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x4f, 0x62, 0x6a,
	0x53, 0x74, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x1a, 0x43, 0x0a, 0x0b, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x74,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x9e, 0x01, 0x0a, 0x07,
	0x41, 0x72, 0x72, 0x61, 0x79, 0x53, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a,
	0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x74, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12,
	0x1d, 0x0a, 0x0a, 0x6d, 0x69, 0x6e, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x09, 0x6d, 0x69, 0x6e, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x1d,
	0x0a, 0x0a, 0x6d, 0x61, 0x78, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x75, 0x6d, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x09, 0x73, 0x75, 0x6d, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x22, 0x2b, 0x0a, 0x0f,
	0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x44, 0x69, 0x67, 0x65, 0x73, 0x74, 0x12,
	0x18, 0x0a, 0x03, 0x6f, 0x62, 0x6a, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x4f,
	0x62, 0x6a, 0x53, 0x74, 0x52, 0x03, 0x6f, 0x62, 0x6a, 0x22, 0x1f, 0x0a, 0x07, 0x4d, 0x69, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x31, 0x0a, 0x07, 0x41, 0x76,
	0x67, 0x53, 0x74, 0x61, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x03, 0x73, 0x75, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x1f, 0x0a,
	0x07, 0x4d, 0x61, 0x78, 0x53, 0x74, 0x61, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x60,
	0x0a, 0x0a, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x12, 0x1a, 0x0a, 0x03,
	0x6d, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x4d, 0x69, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x52, 0x03, 0x6d, 0x69, 0x6e, 0x12, 0x1a, 0x0a, 0x03, 0x61, 0x76, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x41, 0x76, 0x67, 0x53, 0x74, 0x61, 0x74, 0x52,
	0x03, 0x61, 0x76, 0x67, 0x12, 0x1a, 0x0a, 0x03, 0x6d, 0x61, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x08, 0x2e, 0x4d, 0x61, 0x78, 0x53, 0x74, 0x61, 0x74, 0x52, 0x03, 0x6d, 0x61, 0x78,
	0x22, 0xc6, 0x01, 0x0a, 0x0b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x75, 0x6c, 0x6c, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x6e, 0x75, 0x6c, 0x6c,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x03, 0x6d, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x08, 0x2e, 0x4d, 0x69, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x52, 0x03, 0x6d, 0x69,
	0x6e, 0x12, 0x1a, 0x0a, 0x03, 0x61, 0x76, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08,
	0x2e, 0x41, 0x76, 0x67, 0x53, 0x74, 0x61, 0x74, 0x52, 0x03, 0x61, 0x76, 0x67, 0x12, 0x1a, 0x0a,
	0x03, 0x6d, 0x61, 0x78, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x4d, 0x61, 0x78,
	0x53, 0x74, 0x61, 0x74, 0x52, 0x03, 0x6d, 0x61, 0x78, 0x22, 0x97, 0x01, 0x0a, 0x0b, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x6e, 0x75, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x09, 0x6e, 0x75, 0x6c, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23,
	0x0a, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b,
	0x2e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x52, 0x06, 0x6c, 0x65, 0x6e,
	0x67, 0x74, 0x68, 0x22, 0xb3, 0x01, 0x0a, 0x0c, 0x42, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x75,
	0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09,
	0x6e, 0x75, 0x6c, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x46, 0x61, 0x6c, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x74, 0x72, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x72, 0x75, 0x65, 0x22, 0x96, 0x01, 0x0a, 0x0a, 0x41, 0x72,
	0x72, 0x61, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x6e, 0x75, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x09, 0x6e, 0x75, 0x6c, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23, 0x0a,
	0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x22, 0xe6, 0x01, 0x0a, 0x08, 0x4f, 0x62, 0x6a, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x75, 0x6c, 0x6c, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x6e, 0x75, 0x6c, 0x6c, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2d, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x4f, 0x62, 0x6a, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x2e,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x73, 0x1a, 0x46, 0x0a, 0x0b, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x21, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x81, 0x02, 0x0a, 0x0a,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6e,
	0x75, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x09, 0x6e, 0x75, 0x6c, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x06, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x24, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06,
	0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x27, 0x0a, 0x07, 0x62, 0x6f, 0x6f, 0x6c, 0x65, 0x61,
	0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x65, 0x61,
	0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x07, 0x62, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x12,
	0x21, 0x0a, 0x05, 0x61, 0x72, 0x72, 0x61, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b,
	0x2e, 0x41, 0x72, 0x72, 0x61, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x61, 0x72, 0x72,
	0x61, 0x79, 0x12, 0x1b, 0x0a, 0x03, 0x6f, 0x62, 0x6a, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x09, 0x2e, 0x4f, 0x62, 0x6a, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x03, 0x6f, 0x62, 0x6a, 0x22,
	0xc4, 0x04, 0x0a, 0x0a, 0x54, 0x65, 0x73, 0x74, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06,
	0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x69, 0x6e, 0x74, 0x33, 0x32, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x6e, 0x74,
	0x33, 0x32, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x69, 0x6e, 0x74,
	0x33, 0x32, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x32,
	0x12, 0x16, 0x0a, 0x06, 0x75, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x75, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x69, 0x6e, 0x74,
	0x33, 0x32, 0x18, 0x07, 0x20, 0x01, 0x28, 0x11, 0x52, 0x06, 0x73, 0x69, 0x6e, 0x74, 0x33, 0x32,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x18, 0x08, 0x20, 0x01, 0x28, 0x12,
	0x52, 0x06, 0x73, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x78, 0x65,
	0x64, 0x33, 0x32, 0x18, 0x09, 0x20, 0x01, 0x28, 0x07, 0x52, 0x07, 0x66, 0x69, 0x78, 0x65, 0x64,
	0x33, 0x32, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x06, 0x52, 0x07, 0x66, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x12, 0x1a, 0x0a, 0x08,
	0x73, 0x66, 0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0f, 0x52, 0x08,
	0x73, 0x66, 0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x66, 0x69, 0x78,
	0x65, 0x64, 0x36, 0x34, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x10, 0x52, 0x08, 0x73, 0x66, 0x69, 0x78,
	0x65, 0x64, 0x36, 0x34, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x6f, 0x6c, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x04, 0x62, 0x6f, 0x6f, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x12, 0x14, 0x0a, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x72, 0x72, 0x61, 0x79, 0x18,
	0x10, 0x20, 0x03, 0x28, 0x05, 0x52, 0x05, 0x61, 0x72, 0x72, 0x61, 0x79, 0x12, 0x26, 0x0a, 0x03,
	0x6d, 0x61, 0x70, 0x18, 0x11, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x54, 0x65, 0x73, 0x74,
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x03, 0x6d, 0x61, 0x70, 0x12, 0x2a, 0x0a, 0x0a, 0x6e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x6d,
	0x73, 0x67, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x53,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x09, 0x6e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x4d, 0x73, 0x67,
	0x12, 0x2c, 0x0a, 0x0b, 0x6e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x6d, 0x73, 0x67, 0x73, 0x18,
	0x13, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x53, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x52, 0x0a, 0x6e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x4d, 0x73, 0x67, 0x73, 0x1a, 0x36,
	0x0a, 0x08, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x2d, 0x5a, 0x2b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6e, 0x65, 0x62, 0x6c, 0x69, 0x63, 0x2f, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protos_dataplane_proto_rawDescOnce sync.Once
	file_protos_dataplane_proto_rawDescData = file_protos_dataplane_proto_rawDesc
)

func file_protos_dataplane_proto_rawDescGZIP() []byte {
	file_protos_dataplane_proto_rawDescOnce.Do(func() {
		file_protos_dataplane_proto_rawDescData = protoimpl.X.CompressGZIP(file_protos_dataplane_proto_rawDescData)
	})
	return file_protos_dataplane_proto_rawDescData
}

var file_protos_dataplane_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_protos_dataplane_proto_goTypes = []interface{}{
	(*IntNumSt)(nil),        // 0: IntNumSt
	(*UIntNumSt)(nil),       // 1: UIntNumSt
	(*FloatNumSt)(nil),      // 2: FloatNumSt
	(*NumberSt)(nil),        // 3: NumberSt
	(*StringSt)(nil),        // 4: StringSt
	(*BooleanSt)(nil),       // 5: BooleanSt
	(*ValueSt)(nil),         // 6: ValueSt
	(*ObjSt)(nil),           // 7: ObjSt
	(*ArraySt)(nil),         // 8: ArraySt
	(*StructureDigest)(nil), // 9: StructureDigest
	(*MinStat)(nil),         // 10: MinStat
	(*AvgStat)(nil),         // 11: AvgStat
	(*MaxStat)(nil),         // 12: MaxStat
	(*NumberStat)(nil),      // 13: NumberStat
	(*NumberValue)(nil),     // 14: NumberValue
	(*StringValue)(nil),     // 15: StringValue
	(*BooleanValue)(nil),    // 16: BooleanValue
	(*ArrayValue)(nil),      // 17: ArrayValue
	(*ObjValue)(nil),        // 18: ObjValue
	(*ValueValue)(nil),      // 19: ValueValue
	(*TestSample)(nil),      // 20: TestSample
	nil,                     // 21: ObjSt.FieldsEntry
	nil,                     // 22: ObjValue.FieldsEntry
	nil,                     // 23: TestSample.MapEntry
}
var file_protos_dataplane_proto_depIdxs = []int32{
	0,  // 0: NumberSt.integer_num:type_name -> IntNumSt
	1,  // 1: NumberSt.uinteger_num:type_name -> UIntNumSt
	2,  // 2: NumberSt.float_num:type_name -> FloatNumSt
	3,  // 3: ValueSt.number:type_name -> NumberSt
	4,  // 4: ValueSt.string:type_name -> StringSt
	5,  // 5: ValueSt.boolean:type_name -> BooleanSt
	8,  // 6: ValueSt.array:type_name -> ArraySt
	7,  // 7: ValueSt.obj:type_name -> ObjSt
	21, // 8: ObjSt.fields:type_name -> ObjSt.FieldsEntry
	6,  // 9: ArraySt.values:type_name -> ValueSt
	7,  // 10: StructureDigest.obj:type_name -> ObjSt
	10, // 11: NumberStat.min:type_name -> MinStat
	11, // 12: NumberStat.avg:type_name -> AvgStat
	12, // 13: NumberStat.max:type_name -> MaxStat
	10, // 14: NumberValue.min:type_name -> MinStat
	11, // 15: NumberValue.avg:type_name -> AvgStat
	12, // 16: NumberValue.max:type_name -> MaxStat
	13, // 17: StringValue.length:type_name -> NumberStat
	19, // 18: ArrayValue.values:type_name -> ValueValue
	22, // 19: ObjValue.fields:type_name -> ObjValue.FieldsEntry
	14, // 20: ValueValue.number:type_name -> NumberValue
	15, // 21: ValueValue.string:type_name -> StringValue
	16, // 22: ValueValue.boolean:type_name -> BooleanValue
	17, // 23: ValueValue.array:type_name -> ArrayValue
	18, // 24: ValueValue.obj:type_name -> ObjValue
	23, // 25: TestSample.map:type_name -> TestSample.MapEntry
	20, // 26: TestSample.nested_msg:type_name -> TestSample
	20, // 27: TestSample.nested_msgs:type_name -> TestSample
	6,  // 28: ObjSt.FieldsEntry.value:type_name -> ValueSt
	19, // 29: ObjValue.FieldsEntry.value:type_name -> ValueValue
	30, // [30:30] is the sub-list for method output_type
	30, // [30:30] is the sub-list for method input_type
	30, // [30:30] is the sub-list for extension type_name
	30, // [30:30] is the sub-list for extension extendee
	0,  // [0:30] is the sub-list for field type_name
}

func init() { file_protos_dataplane_proto_init() }
func file_protos_dataplane_proto_init() {
	if File_protos_dataplane_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_protos_dataplane_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IntNumSt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_dataplane_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UIntNumSt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_dataplane_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FloatNumSt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_dataplane_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NumberSt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_dataplane_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StringSt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_dataplane_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BooleanSt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_dataplane_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValueSt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_dataplane_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjSt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_dataplane_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArraySt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_dataplane_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StructureDigest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_dataplane_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MinStat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_dataplane_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvgStat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_dataplane_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxStat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_dataplane_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NumberStat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_dataplane_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NumberValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_dataplane_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StringValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_dataplane_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BooleanValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_dataplane_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArrayValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_dataplane_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_dataplane_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValueValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_dataplane_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestSample); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protos_dataplane_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_protos_dataplane_proto_goTypes,
		DependencyIndexes: file_protos_dataplane_proto_depIdxs,
		MessageInfos:      file_protos_dataplane_proto_msgTypes,
	}.Build()
	File_protos_dataplane_proto = out.File
	file_protos_dataplane_proto_rawDesc = nil
	file_protos_dataplane_proto_goTypes = nil
	file_protos_dataplane_proto_depIdxs = nil
}
