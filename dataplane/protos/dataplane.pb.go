// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.21.6
// source: protos/dataplane.proto

package protos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type IntNumType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count int64 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *IntNumType) Reset() {
	*x = IntNumType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_dataplane_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IntNumType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntNumType) ProtoMessage() {}

func (x *IntNumType) ProtoReflect() protoreflect.Message {
	mi := &file_protos_dataplane_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntNumType.ProtoReflect.Descriptor instead.
func (*IntNumType) Descriptor() ([]byte, []int) {
	return file_protos_dataplane_proto_rawDescGZIP(), []int{0}
}

func (x *IntNumType) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type UIntNumType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count int64 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *UIntNumType) Reset() {
	*x = UIntNumType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_dataplane_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UIntNumType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UIntNumType) ProtoMessage() {}

func (x *UIntNumType) ProtoReflect() protoreflect.Message {
	mi := &file_protos_dataplane_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UIntNumType.ProtoReflect.Descriptor instead.
func (*UIntNumType) Descriptor() ([]byte, []int) {
	return file_protos_dataplane_proto_rawDescGZIP(), []int{1}
}

func (x *UIntNumType) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type FloatNumType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count int64 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *FloatNumType) Reset() {
	*x = FloatNumType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_dataplane_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FloatNumType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FloatNumType) ProtoMessage() {}

func (x *FloatNumType) ProtoReflect() protoreflect.Message {
	mi := &file_protos_dataplane_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FloatNumType.ProtoReflect.Descriptor instead.
func (*FloatNumType) Descriptor() ([]byte, []int) {
	return file_protos_dataplane_proto_rawDescGZIP(), []int{2}
}

func (x *FloatNumType) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type NumberType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// if more than one is set, multiple types detected
	IntegerNum  *IntNumType   `protobuf:"bytes,1,opt,name=integer_num,json=integerNum,proto3" json:"integer_num,omitempty"`
	UintegerNum *UIntNumType  `protobuf:"bytes,2,opt,name=uinteger_num,json=uintegerNum,proto3" json:"uinteger_num,omitempty"`
	FloatNum    *FloatNumType `protobuf:"bytes,3,opt,name=float_num,json=floatNum,proto3" json:"float_num,omitempty"`
}

func (x *NumberType) Reset() {
	*x = NumberType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_dataplane_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NumberType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NumberType) ProtoMessage() {}

func (x *NumberType) ProtoReflect() protoreflect.Message {
	mi := &file_protos_dataplane_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NumberType.ProtoReflect.Descriptor instead.
func (*NumberType) Descriptor() ([]byte, []int) {
	return file_protos_dataplane_proto_rawDescGZIP(), []int{3}
}

func (x *NumberType) GetIntegerNum() *IntNumType {
	if x != nil {
		return x.IntegerNum
	}
	return nil
}

func (x *NumberType) GetUintegerNum() *UIntNumType {
	if x != nil {
		return x.UintegerNum
	}
	return nil
}

func (x *NumberType) GetFloatNum() *FloatNumType {
	if x != nil {
		return x.FloatNum
	}
	return nil
}

type StringType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count int64 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *StringType) Reset() {
	*x = StringType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_dataplane_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StringType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringType) ProtoMessage() {}

func (x *StringType) ProtoReflect() protoreflect.Message {
	mi := &file_protos_dataplane_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StringType.ProtoReflect.Descriptor instead.
func (*StringType) Descriptor() ([]byte, []int) {
	return file_protos_dataplane_proto_rawDescGZIP(), []int{4}
}

func (x *StringType) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type BooleanType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count int64 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *BooleanType) Reset() {
	*x = BooleanType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_dataplane_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BooleanType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BooleanType) ProtoMessage() {}

func (x *BooleanType) ProtoReflect() protoreflect.Message {
	mi := &file_protos_dataplane_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BooleanType.ProtoReflect.Descriptor instead.
func (*BooleanType) Descriptor() ([]byte, []int) {
	return file_protos_dataplane_proto_rawDescGZIP(), []int{5}
}

func (x *BooleanType) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type Value struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// if more than one is set, multiple types detected
	Number  *NumberType  `protobuf:"bytes,1,opt,name=number,proto3" json:"number,omitempty"`
	String_ *StringType  `protobuf:"bytes,2,opt,name=string,proto3" json:"string,omitempty"`
	Boolean *BooleanType `protobuf:"bytes,3,opt,name=boolean,proto3" json:"boolean,omitempty"`
	Array   *ArrayType   `protobuf:"bytes,4,opt,name=array,proto3" json:"array,omitempty"`
	Obj     *ObjType     `protobuf:"bytes,5,opt,name=obj,proto3" json:"obj,omitempty"`
}

func (x *Value) Reset() {
	*x = Value{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_dataplane_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Value) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Value) ProtoMessage() {}

func (x *Value) ProtoReflect() protoreflect.Message {
	mi := &file_protos_dataplane_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Value.ProtoReflect.Descriptor instead.
func (*Value) Descriptor() ([]byte, []int) {
	return file_protos_dataplane_proto_rawDescGZIP(), []int{6}
}

func (x *Value) GetNumber() *NumberType {
	if x != nil {
		return x.Number
	}
	return nil
}

func (x *Value) GetString_() *StringType {
	if x != nil {
		return x.String_
	}
	return nil
}

func (x *Value) GetBoolean() *BooleanType {
	if x != nil {
		return x.Boolean
	}
	return nil
}

func (x *Value) GetArray() *ArrayType {
	if x != nil {
		return x.Array
	}
	return nil
}

func (x *Value) GetObj() *ObjType {
	if x != nil {
		return x.Obj
	}
	return nil
}

type ObjType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count  int64             `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	Fields map[string]*Value `protobuf:"bytes,2,rep,name=fields,proto3" json:"fields,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ObjType) Reset() {
	*x = ObjType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_dataplane_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjType) ProtoMessage() {}

func (x *ObjType) ProtoReflect() protoreflect.Message {
	mi := &file_protos_dataplane_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjType.ProtoReflect.Descriptor instead.
func (*ObjType) Descriptor() ([]byte, []int) {
	return file_protos_dataplane_proto_rawDescGZIP(), []int{7}
}

func (x *ObjType) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ObjType) GetFields() map[string]*Value {
	if x != nil {
		return x.Fields
	}
	return nil
}

type FixedLengthOrderedArrayType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fields []*Value `protobuf:"bytes,1,rep,name=fields,proto3" json:"fields,omitempty"`
}

func (x *FixedLengthOrderedArrayType) Reset() {
	*x = FixedLengthOrderedArrayType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_dataplane_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FixedLengthOrderedArrayType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FixedLengthOrderedArrayType) ProtoMessage() {}

func (x *FixedLengthOrderedArrayType) ProtoReflect() protoreflect.Message {
	mi := &file_protos_dataplane_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FixedLengthOrderedArrayType.ProtoReflect.Descriptor instead.
func (*FixedLengthOrderedArrayType) Descriptor() ([]byte, []int) {
	return file_protos_dataplane_proto_rawDescGZIP(), []int{8}
}

func (x *FixedLengthOrderedArrayType) GetFields() []*Value {
	if x != nil {
		return x.Fields
	}
	return nil
}

type VariableLengthArrayType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MinLength int64 `protobuf:"varint,1,opt,name=min_length,json=minLength,proto3" json:"min_length,omitempty"`
	MaxLength int64 `protobuf:"varint,2,opt,name=max_length,json=maxLength,proto3" json:"max_length,omitempty"`
	// to be able to calculate the average when aggregating digests
	SumLength int64 `protobuf:"varint,3,opt,name=sum_length,json=sumLength,proto3" json:"sum_length,omitempty"`
}

func (x *VariableLengthArrayType) Reset() {
	*x = VariableLengthArrayType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_dataplane_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VariableLengthArrayType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VariableLengthArrayType) ProtoMessage() {}

func (x *VariableLengthArrayType) ProtoReflect() protoreflect.Message {
	mi := &file_protos_dataplane_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VariableLengthArrayType.ProtoReflect.Descriptor instead.
func (*VariableLengthArrayType) Descriptor() ([]byte, []int) {
	return file_protos_dataplane_proto_rawDescGZIP(), []int{9}
}

func (x *VariableLengthArrayType) GetMinLength() int64 {
	if x != nil {
		return x.MinLength
	}
	return 0
}

func (x *VariableLengthArrayType) GetMaxLength() int64 {
	if x != nil {
		return x.MaxLength
	}
	return 0
}

func (x *VariableLengthArrayType) GetSumLength() int64 {
	if x != nil {
		return x.SumLength
	}
	return 0
}

type ArrayType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count int64 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	// only one should be set, when multiple lenghts are detected,
	// the array is considered variable length
	FixedLengthOrderedArray *FixedLengthOrderedArrayType `protobuf:"bytes,2,opt,name=fixed_length_ordered_array,json=fixedLengthOrderedArray,proto3" json:"fixed_length_ordered_array,omitempty"`
	VariableLengthArray     *VariableLengthArrayType     `protobuf:"bytes,3,opt,name=variable_length_array,json=variableLengthArray,proto3" json:"variable_length_array,omitempty"`
}

func (x *ArrayType) Reset() {
	*x = ArrayType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_dataplane_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArrayType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArrayType) ProtoMessage() {}

func (x *ArrayType) ProtoReflect() protoreflect.Message {
	mi := &file_protos_dataplane_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArrayType.ProtoReflect.Descriptor instead.
func (*ArrayType) Descriptor() ([]byte, []int) {
	return file_protos_dataplane_proto_rawDescGZIP(), []int{10}
}

func (x *ArrayType) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ArrayType) GetFixedLengthOrderedArray() *FixedLengthOrderedArrayType {
	if x != nil {
		return x.FixedLengthOrderedArray
	}
	return nil
}

func (x *ArrayType) GetVariableLengthArray() *VariableLengthArrayType {
	if x != nil {
		return x.VariableLengthArray
	}
	return nil
}

type StructureDigest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Obj *ObjType `protobuf:"bytes,1,opt,name=obj,proto3" json:"obj,omitempty"`
}

func (x *StructureDigest) Reset() {
	*x = StructureDigest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_dataplane_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StructureDigest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StructureDigest) ProtoMessage() {}

func (x *StructureDigest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_dataplane_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StructureDigest.ProtoReflect.Descriptor instead.
func (*StructureDigest) Descriptor() ([]byte, []int) {
	return file_protos_dataplane_proto_rawDescGZIP(), []int{11}
}

func (x *StructureDigest) GetObj() *ObjType {
	if x != nil {
		return x.Obj
	}
	return nil
}

// used for testing
type TestSample struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Double     float64         `protobuf:"fixed64,1,opt,name=double,proto3" json:"double,omitempty"`
	Float      float32         `protobuf:"fixed32,2,opt,name=float,proto3" json:"float,omitempty"`
	Int32      int32           `protobuf:"varint,3,opt,name=int32,proto3" json:"int32,omitempty"`
	Int64      int64           `protobuf:"varint,4,opt,name=int64,proto3" json:"int64,omitempty"`
	Uint32     uint32          `protobuf:"varint,5,opt,name=uint32,proto3" json:"uint32,omitempty"`
	Uint64     uint64          `protobuf:"varint,6,opt,name=uint64,proto3" json:"uint64,omitempty"`
	Sint32     int32           `protobuf:"zigzag32,7,opt,name=sint32,proto3" json:"sint32,omitempty"`
	Sint64     int64           `protobuf:"zigzag64,8,opt,name=sint64,proto3" json:"sint64,omitempty"`
	Fixed32    uint32          `protobuf:"fixed32,9,opt,name=fixed32,proto3" json:"fixed32,omitempty"`
	Fixed64    uint64          `protobuf:"fixed64,10,opt,name=fixed64,proto3" json:"fixed64,omitempty"`
	Sfixed32   int32           `protobuf:"fixed32,11,opt,name=sfixed32,proto3" json:"sfixed32,omitempty"`
	Sfixed64   int64           `protobuf:"fixed64,12,opt,name=sfixed64,proto3" json:"sfixed64,omitempty"`
	Bool       bool            `protobuf:"varint,13,opt,name=bool,proto3" json:"bool,omitempty"`
	String_    string          `protobuf:"bytes,14,opt,name=string,proto3" json:"string,omitempty"`
	Bytes      []byte          `protobuf:"bytes,15,opt,name=bytes,proto3" json:"bytes,omitempty"`
	Array      []int32         `protobuf:"varint,16,rep,packed,name=array,proto3" json:"array,omitempty"`
	Map        map[int32]int32 `protobuf:"bytes,17,rep,name=map,proto3" json:"map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	NestedMsg  *TestSample     `protobuf:"bytes,18,opt,name=nested_msg,json=nestedMsg,proto3" json:"nested_msg,omitempty"`
	NestedMsgs []*TestSample   `protobuf:"bytes,19,rep,name=nested_msgs,json=nestedMsgs,proto3" json:"nested_msgs,omitempty"`
}

func (x *TestSample) Reset() {
	*x = TestSample{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_dataplane_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestSample) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestSample) ProtoMessage() {}

func (x *TestSample) ProtoReflect() protoreflect.Message {
	mi := &file_protos_dataplane_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestSample.ProtoReflect.Descriptor instead.
func (*TestSample) Descriptor() ([]byte, []int) {
	return file_protos_dataplane_proto_rawDescGZIP(), []int{12}
}

func (x *TestSample) GetDouble() float64 {
	if x != nil {
		return x.Double
	}
	return 0
}

func (x *TestSample) GetFloat() float32 {
	if x != nil {
		return x.Float
	}
	return 0
}

func (x *TestSample) GetInt32() int32 {
	if x != nil {
		return x.Int32
	}
	return 0
}

func (x *TestSample) GetInt64() int64 {
	if x != nil {
		return x.Int64
	}
	return 0
}

func (x *TestSample) GetUint32() uint32 {
	if x != nil {
		return x.Uint32
	}
	return 0
}

func (x *TestSample) GetUint64() uint64 {
	if x != nil {
		return x.Uint64
	}
	return 0
}

func (x *TestSample) GetSint32() int32 {
	if x != nil {
		return x.Sint32
	}
	return 0
}

func (x *TestSample) GetSint64() int64 {
	if x != nil {
		return x.Sint64
	}
	return 0
}

func (x *TestSample) GetFixed32() uint32 {
	if x != nil {
		return x.Fixed32
	}
	return 0
}

func (x *TestSample) GetFixed64() uint64 {
	if x != nil {
		return x.Fixed64
	}
	return 0
}

func (x *TestSample) GetSfixed32() int32 {
	if x != nil {
		return x.Sfixed32
	}
	return 0
}

func (x *TestSample) GetSfixed64() int64 {
	if x != nil {
		return x.Sfixed64
	}
	return 0
}

func (x *TestSample) GetBool() bool {
	if x != nil {
		return x.Bool
	}
	return false
}

func (x *TestSample) GetString_() string {
	if x != nil {
		return x.String_
	}
	return ""
}

func (x *TestSample) GetBytes() []byte {
	if x != nil {
		return x.Bytes
	}
	return nil
}

func (x *TestSample) GetArray() []int32 {
	if x != nil {
		return x.Array
	}
	return nil
}

func (x *TestSample) GetMap() map[int32]int32 {
	if x != nil {
		return x.Map
	}
	return nil
}

func (x *TestSample) GetNestedMsg() *TestSample {
	if x != nil {
		return x.NestedMsg
	}
	return nil
}

func (x *TestSample) GetNestedMsgs() []*TestSample {
	if x != nil {
		return x.NestedMsgs
	}
	return nil
}

var File_protos_dataplane_proto protoreflect.FileDescriptor

var file_protos_dataplane_proto_rawDesc = []byte{
	0x0a, 0x16, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61,
	0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x22, 0x0a, 0x0a, 0x49, 0x6e, 0x74, 0x4e,
	0x75, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x23, 0x0a, 0x0b,
	0x55, 0x49, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x22, 0x24, 0x0a, 0x0c, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x4e, 0x75, 0x6d, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x97, 0x01, 0x0a, 0x0a, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2c, 0x0a, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x65,
	0x72, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x49, 0x6e,
	0x74, 0x4e, 0x75, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x65,
	0x72, 0x4e, 0x75, 0x6d, 0x12, 0x2f, 0x0a, 0x0c, 0x75, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72,
	0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x55, 0x49, 0x6e,
	0x74, 0x4e, 0x75, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x75, 0x69, 0x6e, 0x74, 0x65, 0x67,
	0x65, 0x72, 0x4e, 0x75, 0x6d, 0x12, 0x2a, 0x0a, 0x09, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x5f, 0x6e,
	0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x46, 0x6c, 0x6f, 0x61, 0x74,
	0x4e, 0x75, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x4e, 0x75,
	0x6d, 0x22, 0x22, 0x0a, 0x0a, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x23, 0x0a, 0x0b, 0x42, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xb7, 0x01, 0x0a, 0x05, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x23, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x06, 0x73, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x26,
	0x0a, 0x07, 0x62, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x62,
	0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x12, 0x20, 0x0a, 0x05, 0x61, 0x72, 0x72, 0x61, 0x79, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x41, 0x72, 0x72, 0x61, 0x79, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x05, 0x61, 0x72, 0x72, 0x61, 0x79, 0x12, 0x1a, 0x0a, 0x03, 0x6f, 0x62, 0x6a, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x4f, 0x62, 0x6a, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x03, 0x6f, 0x62, 0x6a, 0x22, 0x90, 0x01, 0x0a, 0x07, 0x4f, 0x62, 0x6a, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x4f, 0x62, 0x6a, 0x54, 0x79, 0x70, 0x65,
	0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x73, 0x1a, 0x41, 0x0a, 0x0b, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x3d, 0x0a, 0x1b, 0x46, 0x69, 0x78, 0x65, 0x64,
	0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x65, 0x64, 0x41, 0x72, 0x72,
	0x61, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x22, 0x76, 0x0a, 0x17, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62,
	0x6c, 0x65, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x41, 0x72, 0x72, 0x61, 0x79, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x69, 0x6e, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6d, 0x69, 0x6e, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68,
	0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x78, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x75, 0x6d, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x75, 0x6d, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x22, 0xca,
	0x01, 0x0a, 0x09, 0x41, 0x72, 0x72, 0x61, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x59, 0x0a, 0x1a, 0x66, 0x69, 0x78, 0x65, 0x64, 0x5f, 0x6c, 0x65, 0x6e, 0x67,
	0x74, 0x68, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x65, 0x64, 0x5f, 0x61, 0x72, 0x72, 0x61, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x46, 0x69, 0x78, 0x65, 0x64, 0x4c, 0x65,
	0x6e, 0x67, 0x74, 0x68, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x65, 0x64, 0x41, 0x72, 0x72, 0x61, 0x79,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x17, 0x66, 0x69, 0x78, 0x65, 0x64, 0x4c, 0x65, 0x6e, 0x67, 0x74,
	0x68, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x65, 0x64, 0x41, 0x72, 0x72, 0x61, 0x79, 0x12, 0x4c, 0x0a,
	0x15, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68,
	0x5f, 0x61, 0x72, 0x72, 0x61, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x56,
	0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x41, 0x72, 0x72,
	0x61, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x13, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65,
	0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x41, 0x72, 0x72, 0x61, 0x79, 0x22, 0x2d, 0x0a, 0x0f, 0x53,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x44, 0x69, 0x67, 0x65, 0x73, 0x74, 0x12, 0x1a,
	0x0a, 0x03, 0x6f, 0x62, 0x6a, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x4f, 0x62,
	0x6a, 0x54, 0x79, 0x70, 0x65, 0x52, 0x03, 0x6f, 0x62, 0x6a, 0x22, 0xc4, 0x04, 0x0a, 0x0a, 0x54,
	0x65, 0x73, 0x74, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x75,
	0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x64, 0x6f, 0x75, 0x62, 0x6c,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x05, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x74, 0x33, 0x32,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x12, 0x14, 0x0a,
	0x05, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x69, 0x6e,
	0x74, 0x36, 0x34, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x12, 0x16, 0x0a, 0x06, 0x75,
	0x69, 0x6e, 0x74, 0x36, 0x34, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x69, 0x6e,
	0x74, 0x36, 0x34, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x11, 0x52, 0x06, 0x73, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x69, 0x6e, 0x74, 0x36, 0x34, 0x18, 0x08, 0x20, 0x01, 0x28, 0x12, 0x52, 0x06, 0x73, 0x69, 0x6e,
	0x74, 0x36, 0x34, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x07, 0x52, 0x07, 0x66, 0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x12, 0x18, 0x0a,
	0x07, 0x66, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x06, 0x52, 0x07,
	0x66, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x66, 0x69, 0x78, 0x65,
	0x64, 0x33, 0x32, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0f, 0x52, 0x08, 0x73, 0x66, 0x69, 0x78, 0x65,
	0x64, 0x33, 0x32, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x66, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x10, 0x52, 0x08, 0x73, 0x66, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x12,
	0x12, 0x0a, 0x04, 0x62, 0x6f, 0x6f, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x62,
	0x6f, 0x6f, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x62,
	0x79, 0x74, 0x65, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x62, 0x79, 0x74, 0x65,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x72, 0x72, 0x61, 0x79, 0x18, 0x10, 0x20, 0x03, 0x28, 0x05,
	0x52, 0x05, 0x61, 0x72, 0x72, 0x61, 0x79, 0x12, 0x26, 0x0a, 0x03, 0x6d, 0x61, 0x70, 0x18, 0x11,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x53, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x2e, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x03, 0x6d, 0x61, 0x70, 0x12,
	0x2a, 0x0a, 0x0a, 0x6e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x12, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x52, 0x09, 0x6e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x4d, 0x73, 0x67, 0x12, 0x2c, 0x0a, 0x0b, 0x6e,
	0x65, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x6d, 0x73, 0x67, 0x73, 0x18, 0x13, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0b, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x0a, 0x6e,
	0x65, 0x73, 0x74, 0x65, 0x64, 0x4d, 0x73, 0x67, 0x73, 0x1a, 0x36, 0x0a, 0x08, 0x4d, 0x61, 0x70,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x42, 0x2d, 0x5a, 0x2b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x6e, 0x65, 0x62, 0x6c, 0x69, 0x63, 0x2f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f,
	0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protos_dataplane_proto_rawDescOnce sync.Once
	file_protos_dataplane_proto_rawDescData = file_protos_dataplane_proto_rawDesc
)

func file_protos_dataplane_proto_rawDescGZIP() []byte {
	file_protos_dataplane_proto_rawDescOnce.Do(func() {
		file_protos_dataplane_proto_rawDescData = protoimpl.X.CompressGZIP(file_protos_dataplane_proto_rawDescData)
	})
	return file_protos_dataplane_proto_rawDescData
}

var file_protos_dataplane_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_protos_dataplane_proto_goTypes = []interface{}{
	(*IntNumType)(nil),                  // 0: IntNumType
	(*UIntNumType)(nil),                 // 1: UIntNumType
	(*FloatNumType)(nil),                // 2: FloatNumType
	(*NumberType)(nil),                  // 3: NumberType
	(*StringType)(nil),                  // 4: StringType
	(*BooleanType)(nil),                 // 5: BooleanType
	(*Value)(nil),                       // 6: Value
	(*ObjType)(nil),                     // 7: ObjType
	(*FixedLengthOrderedArrayType)(nil), // 8: FixedLengthOrderedArrayType
	(*VariableLengthArrayType)(nil),     // 9: VariableLengthArrayType
	(*ArrayType)(nil),                   // 10: ArrayType
	(*StructureDigest)(nil),             // 11: StructureDigest
	(*TestSample)(nil),                  // 12: TestSample
	nil,                                 // 13: ObjType.FieldsEntry
	nil,                                 // 14: TestSample.MapEntry
}
var file_protos_dataplane_proto_depIdxs = []int32{
	0,  // 0: NumberType.integer_num:type_name -> IntNumType
	1,  // 1: NumberType.uinteger_num:type_name -> UIntNumType
	2,  // 2: NumberType.float_num:type_name -> FloatNumType
	3,  // 3: Value.number:type_name -> NumberType
	4,  // 4: Value.string:type_name -> StringType
	5,  // 5: Value.boolean:type_name -> BooleanType
	10, // 6: Value.array:type_name -> ArrayType
	7,  // 7: Value.obj:type_name -> ObjType
	13, // 8: ObjType.fields:type_name -> ObjType.FieldsEntry
	6,  // 9: FixedLengthOrderedArrayType.fields:type_name -> Value
	8,  // 10: ArrayType.fixed_length_ordered_array:type_name -> FixedLengthOrderedArrayType
	9,  // 11: ArrayType.variable_length_array:type_name -> VariableLengthArrayType
	7,  // 12: StructureDigest.obj:type_name -> ObjType
	14, // 13: TestSample.map:type_name -> TestSample.MapEntry
	12, // 14: TestSample.nested_msg:type_name -> TestSample
	12, // 15: TestSample.nested_msgs:type_name -> TestSample
	6,  // 16: ObjType.FieldsEntry.value:type_name -> Value
	17, // [17:17] is the sub-list for method output_type
	17, // [17:17] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_protos_dataplane_proto_init() }
func file_protos_dataplane_proto_init() {
	if File_protos_dataplane_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_protos_dataplane_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IntNumType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_dataplane_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UIntNumType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_dataplane_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FloatNumType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_dataplane_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NumberType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_dataplane_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StringType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_dataplane_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BooleanType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_dataplane_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Value); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_dataplane_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_dataplane_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FixedLengthOrderedArrayType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_dataplane_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VariableLengthArrayType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_dataplane_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArrayType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_dataplane_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StructureDigest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_dataplane_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestSample); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protos_dataplane_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_protos_dataplane_proto_goTypes,
		DependencyIndexes: file_protos_dataplane_proto_depIdxs,
		MessageInfos:      file_protos_dataplane_proto_msgTypes,
	}.Build()
	File_protos_dataplane_proto = out.File
	file_protos_dataplane_proto_rawDesc = nil
	file_protos_dataplane_proto_goTypes = nil
	file_protos_dataplane_proto_depIdxs = nil
}
